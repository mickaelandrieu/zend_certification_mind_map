<map version="0.9.0">
<!-- To view this file, download free mind mapping software FreeMind from http://freemind.sourceforge.net -->
<node CREATED="1346100086474" ID="ID_595142701" MODIFIED="1346252561766" TEXT="Zend Certification">
<node CREATED="1346100158240" ID="ID_1962407369" MODIFIED="1346252565486" POSITION="right" TEXT="PHP Basics">
<node CREATED="1346249526290" FOLDED="true" ID="ID_1306461815" MODIFIED="1348124265414" TEXT="Syntax">
<node CREATED="1346100277026" FOLDED="true" ID="ID_638963561" MODIFIED="1348124095109" TEXT="PHP Tags">
<node CREATED="1346100335213" ID="ID_915567489" MODIFIED="1346100368814" TEXT="Standard (&lt;?php ?&gt;)"/>
<node CREATED="1346100357966" ID="ID_1849698480" MODIFIED="1346600210601" TEXT="Short tags (&lt;? ?&gt; and &lt;?= ?&gt;)">
<node CREATED="1346100469846" ID="ID_654493765" MODIFIED="1346100487744" TEXT="May conflict with XML tags">
<icon BUILTIN="messagebox_warning"/>
</node>
</node>
<node CREATED="1346100352910" ID="ID_43637759" MODIFIED="1346600207665" TEXT="Scripts tags (&lt;script language=&quot;PHP&quot;&gt;&lt;/script&gt;)">
<node CREATED="1346100811164" ID="ID_245483288" MODIFIED="1346100818608" TEXT="Deprecated">
<icon BUILTIN="closed"/>
</node>
</node>
<node CREATED="1346100423124" ID="ID_1055159241" MODIFIED="1346600218905" TEXT="Asp Tags (&lt;% %&gt;)">
<node CREATED="1346100799619" ID="ID_124548640" MODIFIED="1346100821471" TEXT="Deprecated">
<icon BUILTIN="closed"/>
</node>
</node>
<node CREATED="1346100513353" ID="ID_1995382054" MODIFIED="1346100534318" TEXT="Try to use only short and standards tags"/>
</node>
<node CREATED="1346100589701" FOLDED="true" ID="ID_931056212" MODIFIED="1348124141140" TEXT="Newline character">
<node CREATED="1346100597749" ID="ID_432710726" MODIFIED="1346100619510" TEXT="Every character outside of PHP tags copied as-is"/>
<node CREATED="1346100632827" ID="ID_1510709137" MODIFIED="1346100666457" TEXT="Use as seperator between header and web server&apos;s response"/>
<node CREATED="1346100692133" ID="ID_217486952" MODIFIED="1346100716980" TEXT="Careful not to output any newline before header end">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346100727775" ID="ID_999099228" MODIFIED="1346100739586" TEXT="First line after closing tag is stripped"/>
<node CREATED="1346100760105" ID="ID_593968980" MODIFIED="1346100779990" TEXT="To prevent unwanted output remove closing tag"/>
</node>
</node>
<node CREATED="1346100836882" FOLDED="true" ID="ID_790926722" MODIFIED="1348124266504" TEXT="PHP script anatomy">
<node CREATED="1346100863267" ID="ID_1120481837" MODIFIED="1346103471376" TEXT="Each instruction must end with &apos;;&apos;"/>
<node CREATED="1346100877940" ID="ID_1680121947" MODIFIED="1346103489337" TEXT="Last instruction before closing tag can ommit &apos;;&apos;">
<icon BUILTIN="info"/>
</node>
<node CREATED="1346100935543" FOLDED="true" ID="ID_1161066243" MODIFIED="1348124167097" TEXT="Composed of">
<node CREATED="1346100950576" ID="ID_923085525" MODIFIED="1346100967998" TEXT="variable assignement"/>
<node CREATED="1346100970769" ID="ID_425297261" MODIFIED="1346100975198" TEXT="function call"/>
<node CREATED="1346100975761" ID="ID_1648029911" MODIFIED="1346101015360" TEXT="data output"/>
<node CREATED="1346101016027" ID="ID_1510610009" MODIFIED="1346101021207" TEXT="directives"/>
</node>
<node CREATED="1346101044853" FOLDED="true" ID="ID_960237943" MODIFIED="1348124196404" TEXT="Comments">
<node CREATED="1346101049765" ID="ID_146638924" MODIFIED="1346600256007" TEXT="Single line comment">
<node CREATED="1346101060294" ID="ID_653290704" MODIFIED="1346101063595" TEXT="//"/>
<node CREATED="1346101063950" ID="ID_74606402" MODIFIED="1346101068467" TEXT="#"/>
<node CREATED="1346101222614" ID="ID_46222505" MODIFIED="1346600258006" TEXT="Can be ended with">
<node CREATED="1346101251191" ID="ID_1753741117" MODIFIED="1346101465326" TEXT="Closing tag"/>
<node CREATED="1346101257815" ID="ID_1654836649" MODIFIED="1346101281117" TEXT="New line character"/>
</node>
</node>
<node CREATED="1346101070327" ID="ID_974841974" MODIFIED="1346600262744" TEXT="Multi line comment">
<node CREATED="1346101079687" ID="ID_1743858577" MODIFIED="1346101095108" TEXT="/* */"/>
</node>
<node CREATED="1346101097463" ID="ID_191406740" MODIFIED="1346600264448" TEXT="API Comment">
<node CREATED="1346101102960" ID="ID_1072311300" MODIFIED="1346101217747" TEXT="/**\n* @param Object $param\n*/"/>
</node>
</node>
<node CREATED="1346101296001" FOLDED="true" ID="ID_1215916237" MODIFIED="1348124221258" TEXT="Whitespace">
<node CREATED="1346101301658" ID="ID_172359602" MODIFIED="1346101321015" TEXT="PHP is whitespace-insensitive"/>
<node CREATED="1346101350596" ID="ID_476991722" MODIFIED="1346101372921" TEXT="Can&apos;t have whitespace between &lt;? and php"/>
<node CREATED="1346101373485" FOLDED="true" ID="ID_155054439" MODIFIED="1346252559905" TEXT="Can&apos;t break apart keyword">
<node CREATED="1346101389990" ID="ID_1619877805" MODIFIED="1346101399427" TEXT="wh[ ]ile"/>
<node CREATED="1346101400247" ID="ID_370880431" MODIFIED="1346101413164" TEXT="f[ ]or"/>
</node>
<node CREATED="1346101419040" ID="ID_296136391" MODIFIED="1346101445221" TEXT="Can&apos;t break apart variable names"/>
<node CREATED="1346101429576" ID="ID_1994687609" MODIFIED="1346101442757" TEXT="Can&apos;t break apart function names"/>
</node>
<node CREATED="1346101487850" FOLDED="true" ID="ID_1869493380" MODIFIED="1348124230021" TEXT="Code block">
<node CREATED="1346101495802" ID="ID_1871631865" MODIFIED="1346101528465" TEXT="Series of statement between 2 braces {}"/>
<node CREATED="1346101541485" ID="ID_1905872165" MODIFIED="1346101552226" TEXT="Code block can be nested"/>
</node>
<node CREATED="1346101608344" FOLDED="true" ID="ID_76418127" MODIFIED="1348124259466" TEXT="Language Constructs">
<node CREATED="1346101627753" ID="ID_175078252" MODIFIED="1346101642031" TEXT="Element built into the language"/>
<node CREATED="1346101811417" ID="ID_246101839" MODIFIED="1346101827383" TEXT="Follows special rules"/>
<node CREATED="1346101648666" ID="ID_1754912433" MODIFIED="1346600287400" TEXT="echo is a language constructs">
<node CREATED="1346101677179" FOLDED="true" ID="ID_1656014299" MODIFIED="1346741054863" TEXT="echo is not a function">
<icon BUILTIN="messagebox_warning"/>
<node CREATED="1346101697661" ID="ID_1403265351" MODIFIED="1346101709001" TEXT="Does not have a return value"/>
</node>
</node>
<node CREATED="1346101729014" ID="ID_1910799309" MODIFIED="1346600289336" TEXT="print() is a language constructs">
<node CREATED="1346101750239" FOLDED="true" ID="ID_499651089" MODIFIED="1346741055239" TEXT="Behave like a function">
<icon BUILTIN="messagebox_warning"/>
<node CREATED="1346101759543" ID="ID_728046643" MODIFIED="1346101764348" TEXT="Always return 1"/>
</node>
</node>
<node CREATED="1346101788577" ID="ID_228506954" MODIFIED="1346741057579" TEXT="die() is a language constructs">
<node CREATED="1346101839899" ID="ID_1886098070" MODIFIED="1346101869658" TEXT="exit() is an alias"/>
</node>
</node>
</node>
<node CREATED="1346101941944" FOLDED="true" ID="ID_1224124025" MODIFIED="1348124556195" TEXT="Data types">
<node CREATED="1346101946376" ID="ID_650884599" MODIFIED="1346102143486" TEXT="PHP Supports many different types"/>
<node CREATED="1346101972393" ID="ID_410157069" MODIFIED="1348119191437" TEXT="2 categories">
<node CREATED="1346101992531" FOLDED="true" ID="ID_299158678" MODIFIED="1348119195089" TEXT="Scalar">
<node CREATED="1346102033781" ID="ID_1698673176" MODIFIED="1346102046775" TEXT="Can contain only one value at a time">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346102002355" FOLDED="true" ID="ID_843128594" MODIFIED="1346741080179" TEXT="boolean">
<node CREATED="1346102058549" ID="ID_1893865105" MODIFIED="1346102070603" TEXT="Value can only be true or false"/>
</node>
<node CREATED="1346102011275" ID="ID_1026476891" MODIFIED="1346741080723" TEXT="int">
<node CREATED="1346102075287" ID="ID_1244984401" MODIFIED="1346102084291" TEXT="Signed numeric integer value"/>
</node>
<node CREATED="1346102019116" ID="ID_801094892" MODIFIED="1346741082223" TEXT="float">
<node CREATED="1346102086542" ID="ID_1603102755" MODIFIED="1346102096748" TEXT="Signed floating point value"/>
</node>
<node CREATED="1346102021875" ID="ID_1941880447" MODIFIED="1346741083551" TEXT="string">
<node CREATED="1346247773150" ID="ID_571800739" MODIFIED="1346247781436" TEXT="Ordered collection of binary data"/>
</node>
</node>
<node CREATED="1346101996266" ID="ID_1488053483" MODIFIED="1346102000199" TEXT="Composite"/>
</node>
<node CREATED="1346248287207" FOLDED="true" ID="ID_662782794" MODIFIED="1348124474897" TEXT="Scalar type">
<node CREATED="1346102146906" FOLDED="true" ID="ID_1771338004" MODIFIED="1348124400375" TEXT="Numeric Values">
<node CREATED="1346102168547" FOLDED="true" ID="ID_549698755" MODIFIED="1348119206829" TEXT="integers">
<node CREATED="1346102194356" ID="ID_752037374" MODIFIED="1346102208849" TEXT="signed integers"/>
<node CREATED="1346102211821" ID="ID_62490956" MODIFIED="1346102228978" TEXT="can express positive and negative value"/>
<node CREATED="1346102252511" FOLDED="true" ID="ID_197498132" MODIFIED="1348119205085" TEXT="Can be declared with">
<node CREATED="1346102281048" ID="ID_1911561029" MODIFIED="1346600335674" TEXT="Decimal">
<node CREATED="1346102290273" FOLDED="true" ID="ID_677466189" MODIFIED="1346741190057" TEXT="10;-11;123">
<node CREATED="1346102333554" ID="ID_999389343" MODIFIED="1346102340536" TEXT="Standard decimal notation"/>
<node CREATED="1346102341051" ID="ID_1329814875" MODIFIED="1346102355816" TEXT="No need for thousand separator"/>
<node CREATED="1346102357164" ID="ID_1534616758" MODIFIED="1346102365593" TEXT="Thousand seperator allowed"/>
</node>
</node>
<node CREATED="1346102368228" ID="ID_733838529" MODIFIED="1346600337195" TEXT="Octal">
<node CREATED="1346102387441" FOLDED="true" ID="ID_693009780" MODIFIED="1346741189363" TEXT="0666, 0100">
<node CREATED="1346102398457" ID="ID_602844048" MODIFIED="1346102402407" TEXT="Octal notation"/>
<node CREATED="1346102403650" ID="ID_1460565682" MODIFIED="1346102415815" TEXT="Identify by leading 0"/>
<node CREATED="1346102419363" ID="ID_318350750" MODIFIED="1346102433336" TEXT="Mainly used to express UNIX style permission"/>
<node CREATED="1346102552177" ID="ID_617252844" MODIFIED="1346247610269" TEXT="Careful of octal notation can be confused with decimal">
<icon BUILTIN="info"/>
</node>
</node>
</node>
<node CREATED="1346102440540" ID="ID_1937681737" MODIFIED="1346600337962" TEXT="Hexadecimal">
<node CREATED="1346102447308" FOLDED="true" ID="ID_1586105119" MODIFIED="1346741197180" TEXT="0x123; 0xFF;-0x100">
<node CREATED="1346102464052" ID="ID_1650557724" MODIFIED="1346102495091" TEXT="Base-16 notation"/>
<node CREATED="1346102495871" ID="ID_647207778" MODIFIED="1346102516612" TEXT="Hexadecimal degit case insensitive"/>
<node CREATED="1346102517943" ID="ID_1708760547" MODIFIED="1346102532469" TEXT="0&apos;x&apos; case insensitive"/>
</node>
</node>
</node>
</node>
<node CREATED="1346102187627" FOLDED="true" ID="ID_1855122314" MODIFIED="1348124360329" TEXT="floating point">
<node CREATED="1346102673007" FOLDED="true" ID="ID_1692495211" MODIFIED="1347950011594" TEXT="also call">
<node CREATED="1346102678872" ID="ID_1088812482" MODIFIED="1346102682618" TEXT="floats"/>
<node CREATED="1346102684950" ID="ID_592404348" MODIFIED="1346102689274" TEXT="doubles"/>
</node>
<node CREATED="1346102694982" ID="ID_1896459913" MODIFIED="1346248608640" STYLE="fork" TEXT="Number with fractionnal component">
<font NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1346102710470" ID="ID_1438619710" MODIFIED="1346248613969" TEXT="Signed numbers"/>
<node CREATED="1346102719535" FOLDED="true" ID="ID_546972684" MODIFIED="1348124359369" TEXT="Can be declared with">
<node CREATED="1346102726200" FOLDED="true" ID="ID_1562278460" MODIFIED="1347950007193" TEXT="Decimal">
<node CREATED="1346102731087" FOLDED="true" ID="ID_320223549" MODIFIED="1346252559900" TEXT="0.12; 123.4 ; -.123">
<node CREATED="1346102753760" ID="ID_967098045" MODIFIED="1346102766079" TEXT="Traditional decimal notation"/>
</node>
</node>
<node CREATED="1346102768393" FOLDED="true" ID="ID_1831109882" MODIFIED="1347950006409" TEXT="Exponential">
<node CREATED="1346102797203" FOLDED="true" ID="ID_1408422410" MODIFIED="1346252559900" TEXT="2E7; 1.2E2">
<node CREATED="1346102809435" ID="ID_887042703" MODIFIED="1346102818424" TEXT="Exponential notation"/>
<node CREATED="1346102819284" ID="ID_826286828" MODIFIED="1346102896373" TEXT="Set of significant digits followed by incensitive &apos;E&apos; and an exponent"/>
<node CREATED="1346102900192" ID="ID_1759452998" MODIFIED="1346102933926" TEXT="Resulting number expressed multiplied by 10 to the exponent"/>
<node CREATED="1346102937665" ID="ID_470812555" MODIFIED="1346102946095" TEXT="1e2 = 100"/>
</node>
</node>
</node>
</node>
<node CREATED="1346102970835" FOLDED="true" ID="ID_161768833" MODIFIED="1348124399310" TEXT="Important to note">
<node CREATED="1346102977356" ID="ID_497824633" MODIFIED="1346103652585" TEXT="Precision and range depends on plateform (64 / 32 bits)"/>
<node CREATED="1346103035823" FOLDED="true" ID="ID_1023931603" MODIFIED="1348124398303" TEXT="float not always capable of representing number way expected">
<node CREATED="1346103110548" FOLDED="true" ID="ID_936352371" MODIFIED="1348124397694" TEXT="echo (int) ((0.1 + 0.7) * 10)">
<node CREATED="1346103172741" ID="ID_1973543203" MODIFIED="1346103181747" TEXT="Should output 8"/>
<node CREATED="1346103183734" ID="ID_806379669" MODIFIED="1346103211740" TEXT="Instead output 7"/>
<node CREATED="1346103224503" ID="ID_302001396" MODIFIED="1346103242415" TEXT="Stored internally as 7.9999999"/>
<node CREATED="1346103243289" ID="ID_594593901" MODIFIED="1346103260926" TEXT="int cast truncate fractional part"/>
</node>
</node>
<node CREATED="1346103276690" ID="ID_110477932" MODIFIED="1346103295880" TEXT="Know limitation of numeric data types">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346103313412" ID="ID_1215063038" MODIFIED="1346103349123" TEXT="If needs precision think about BCMath extension"/>
</node>
</node>
<node CREATED="1346248014714" FOLDED="true" ID="ID_1852094618" MODIFIED="1348124456622" TEXT="Boolean">
<node CREATED="1346248021010" ID="ID_1697950091" MODIFIED="1346248026064" TEXT="Only true or false"/>
<node CREATED="1346248026634" ID="ID_1898913495" MODIFIED="1346248032592" TEXT="Use for logical operations"/>
<node CREATED="1346248033195" FOLDED="true" ID="ID_984009964" MODIFIED="1348124455998" TEXT="conversion rules">
<node CREATED="1346248113718" FOLDED="true" ID="ID_1388927324" MODIFIED="1347949985593" TEXT="From number">
<node CREATED="1346248119095" ID="ID_133215231" MODIFIED="1346248128221" TEXT="if number == 0 =&gt; false"/>
<node CREATED="1346248128951" ID="ID_1232578830" MODIFIED="1346248135517" TEXT="if number != 0 =&gt; true"/>
</node>
<node CREATED="1346248136848" FOLDED="true" ID="ID_1071195653" MODIFIED="1348124448514" TEXT="From string">
<node CREATED="1346248143384" ID="ID_1473955448" MODIFIED="1346248150310" TEXT="If string is empty =&gt; false"/>
<node CREATED="1346248151048" ID="ID_199417360" MODIFIED="1346248173967" TEXT="if string == &apos;0&apos; =&gt; false"/>
<node CREATED="1346248175801" ID="ID_1250245891" MODIFIED="1346248192832" TEXT="if string != &apos;0&apos; &amp;&amp; !empty =&gt; true"/>
</node>
<node CREATED="1346248207003" FOLDED="true" ID="ID_1003600939" MODIFIED="1348124455108" TEXT="TO number or string">
<icon BUILTIN="messagebox_warning"/>
<node CREATED="1346248223468" ID="ID_474229628" MODIFIED="1346248227612" TEXT="if true =&gt; 1"/>
<node CREATED="1346248228220" ID="ID_868515060" MODIFIED="1346248232138" TEXT="if false =&gt; 0"/>
</node>
</node>
</node>
<node CREATED="1346247717188" FOLDED="true" ID="ID_925508578" MODIFIED="1348124471611" TEXT="String">
<node CREATED="1346247722787" ID="ID_833516589" MODIFIED="1346247730249" TEXT="Not only text"/>
<node CREATED="1346247773150" ID="ID_742267634" MODIFIED="1346247781436" TEXT="Ordered collection of binary data"/>
<node CREATED="1346247828128" ID="ID_168699522" MODIFIED="1346247838935" TEXT="Can also be content of image file (binary data)"/>
</node>
</node>
<node CREATED="1346248694242" FOLDED="true" ID="ID_1450382826" MODIFIED="1348124506604" TEXT="Compound Data type">
<node CREATED="1346248720180" ID="ID_1843533645" MODIFIED="1346248734481" TEXT="Container of other data types"/>
<node CREATED="1346248748965" FOLDED="true" ID="ID_40324242" MODIFIED="1348124506043" TEXT="2 Types">
<node CREATED="1346248756501" FOLDED="true" ID="ID_1002920960" MODIFIED="1348124504646" TEXT="Array">
<node CREATED="1346248787671" ID="ID_302449460" MODIFIED="1346248796405" TEXT="Container of ordered data elements"/>
<node CREATED="1346248797240" FOLDED="true" ID="ID_1825803143" MODIFIED="1348124498760" TEXT="Can be use to store or retrieve">
<node CREATED="1346248821321" ID="ID_1646486635" MODIFIED="1346248829917" TEXT="other data type"/>
<node CREATED="1346248830721" ID="ID_1563756753" MODIFIED="1346248844430" TEXT="even array"/>
</node>
</node>
<node CREATED="1346248875995" FOLDED="true" ID="ID_344156868" MODIFIED="1348124505192" TEXT="Object">
<node CREATED="1346248883163" ID="ID_1287286695" MODIFIED="1346248894113" TEXT="Container of data"/>
<node CREATED="1346248894644" ID="ID_1343106905" MODIFIED="1346248913209" TEXT="Container of code"/>
<node CREATED="1346248919597" ID="ID_1899367830" MODIFIED="1346248931347" TEXT="Basis of object programming"/>
</node>
</node>
</node>
<node CREATED="1346248963112" FOLDED="true" ID="ID_191907140" MODIFIED="1348124536009" TEXT="Other types">
<node CREATED="1346248969392" ID="ID_1471605465" MODIFIED="1348124512697" TEXT="NULL">
<node CREATED="1346248995225" ID="ID_1323791957" MODIFIED="1346249006126" TEXT="Indicate variable has no value"/>
<node CREATED="1346249015058" FOLDED="true" ID="ID_1636974928" MODIFIED="1347950042755" TEXT="Variable considered to be NULL">
<node CREATED="1346249028011" ID="ID_876760398" MODIFIED="1346249040072" TEXT="If it has been assigned NULL"/>
<node CREATED="1346249040787" FOLDED="true" ID="ID_1871264942" MODIFIED="1346741287138" TEXT="If it has yet to be assigned a value">
<node CREATED="1346249057900" ID="ID_1014582089" MODIFIED="1346249075845" TEXT="Watch out for warning in this case">
<icon BUILTIN="info"/>
</node>
</node>
</node>
</node>
<node CREATED="1346249102270" FOLDED="true" ID="ID_1289038776" MODIFIED="1347950048747" TEXT="resource">
<node CREATED="1346249109399" ID="ID_1731581125" MODIFIED="1346249127268" TEXT="Indicate use of external resources"/>
<node CREATED="1346249128448" FOLDED="true" ID="ID_1084543684" MODIFIED="1347950047924" TEXT="exemples">
<node CREATED="1346249143153" ID="ID_1142270059" MODIFIED="1346249148013" TEXT="Handling file"/>
<node CREATED="1346249148617" ID="ID_1224860634" MODIFIED="1346249153326" TEXT="Manipulating images"/>
</node>
</node>
</node>
<node CREATED="1346249184115" FOLDED="true" ID="ID_58915276" MODIFIED="1348124554655" TEXT="Converting between data types">
<node CREATED="1346249192418" ID="ID_892427394" MODIFIED="1346249221408" TEXT="PHP take care of conversion on its own"/>
<node CREATED="1346249222476" FOLDED="true" ID="ID_933568958" MODIFIED="1347950056140" TEXT="Still can be force using type conversion operators">
<node CREATED="1346249285151" ID="ID_1027220631" MODIFIED="1346249292916" TEXT="It is a cast"/>
</node>
<node CREATED="1346249300656" FOLDED="true" ID="ID_585124037" MODIFIED="1348124554048" TEXT="Value can not be converted to a special type">
<node CREATED="1346249317336" ID="ID_1074184891" MODIFIED="1346249329694" TEXT="Any value can&apos;t be converted to a resource"/>
<node CREATED="1346249362027" FOLDED="true" ID="ID_371120391" MODIFIED="1347950067956" TEXT="You CAN convert resource to">
<node CREATED="1346249380676" FOLDED="true" ID="ID_1492172159" MODIFIED="1346252559896" TEXT="Numeric value">
<node CREATED="1346249445759" ID="ID_626087385" MODIFIED="1346249459564" TEXT="PHP will return resource ID"/>
</node>
<node CREATED="1346249384852" FOLDED="true" ID="ID_761832514" MODIFIED="1346252559896" TEXT="string data type">
<node CREATED="1346249396180" ID="ID_1592852458" MODIFIED="1346249442860" TEXT="PHP will return &quot;Resource id#{resource id}&quot;"/>
</node>
</node>
</node>
</node>
</node>
<node CREATED="1346249584734" FOLDED="true" ID="ID_1171408157" MODIFIED="1348124621149" TEXT="Variables">
<node CREATED="1346250279295" ID="ID_1539753199" MODIFIED="1346250286964" TEXT="Temporary storage container"/>
<node CREATED="1346250294512" ID="ID_985095084" MODIFIED="1346250375857" TEXT="Can contain any type"/>
<node CREATED="1346250376492" ID="ID_165209497" MODIFIED="1346250387649" TEXT="PHP is loosely typed"/>
<node CREATED="1346250654642" ID="ID_1025895388" MODIFIED="1346250681055" TEXT="Can be interpolated (inserted) directly into certain strings"/>
<node CREATED="1346250408142" FOLDED="true" ID="ID_740857048" MODIFIED="1348003968078" TEXT="Identification">
<node CREATED="1346250571782" ID="ID_1405320391" MODIFIED="1346250580586" TEXT="start with a &apos;$&apos;"/>
<node CREATED="1346250600095" FOLDED="true" ID="ID_1146210186" MODIFIED="1348003967204" TEXT="identifier name">
<node CREATED="1346250467784" ID="ID_1280897316" MODIFIED="1346250616209" TEXT="Must start with a letter"/>
<node CREATED="1346250432534" ID="ID_1887274186" MODIFIED="1346250466885" TEXT="Name can contain ([a-zA-Z0-9_])"/>
<node CREATED="1346250489921" ID="ID_1731138586" MODIFIED="1346250624620" TEXT="Variable name is case sensitive">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346250511515" FOLDED="true" ID="ID_636893203" MODIFIED="1348003965721" TEXT="Exemples">
<node CREATED="1346250521107" ID="ID_361035192" MODIFIED="1346250547621" TEXT="$name">
<icon BUILTIN="button_ok"/>
</node>
<node CREATED="1346250527099" ID="ID_44637314" MODIFIED="1346250551115" TEXT="$_name">
<icon BUILTIN="button_ok"/>
</node>
<node CREATED="1346250530867" ID="ID_928278674" MODIFIED="1346250554062" TEXT="$1name">
<icon BUILTIN="button_cancel"/>
</node>
</node>
</node>
</node>
<node CREATED="1346250694908" FOLDED="true" ID="ID_1220659620" MODIFIED="1348124601120" TEXT="Variables Variables">
<node CREATED="1346250701612" ID="ID_738680422" MODIFIED="1346250812934" TEXT="Variable whose name is content in another variable"/>
<node CREATED="1346251543725" FOLDED="true" ID="ID_1040633273" MODIFIED="1348124596984" TEXT="exemple">
<node CREATED="1346250907501" ID="ID_1394887440" MODIFIED="1346251560274" TEXT="$name = &apos;foo&apos;;"/>
<node CREATED="1346251560805" ID="ID_652902336" MODIFIED="1346251569042" TEXT="$$name=&apos;bar&apos;;"/>
<node CREATED="1346251569446" ID="ID_557483369" MODIFIED="1346251571890" TEXT="echo $foo //displays &apos;bar&apos; "/>
</node>
<node CREATED="1346250925830" FOLDED="true" ID="ID_221024790" MODIFIED="1348124593647" TEXT="Can permit creation of invalid identifier">
<node CREATED="1346250969849" FOLDED="true" ID="ID_1135939374" MODIFIED="1346741358372" TEXT="$name = &apos;123&apos;;">
<node CREATED="1346251032636" ID="ID_1287417694" MODIFIED="1346251053570" TEXT="this variable name should not be allowed"/>
</node>
<node CREATED="1346251003306" FOLDED="true" ID="ID_1454411580" MODIFIED="1346741357916" TEXT="$$name = &apos;456&apos;;">
<node CREATED="1346251055301" ID="ID_670291443" MODIFIED="1346251068362" TEXT="yet we assign &apos;456&apos;"/>
</node>
<node CREATED="1346251014587" FOLDED="true" ID="ID_29868146" MODIFIED="1346741357372" TEXT="echo ${&apos;123&apos;};">
<node CREATED="1346251070934" ID="ID_189310975" MODIFIED="1346251081338" TEXT="And output content using {}"/>
<node CREATED="1346251324161" ID="ID_1712866382" MODIFIED="1346251336831" TEXT="Can also be output with echo $$name"/>
</node>
</node>
<node CREATED="1346251356459" ID="ID_1165256320" MODIFIED="1346251376969" TEXT="Should be use with extreme care"/>
<node CREATED="1346251385580" ID="ID_894729067" MODIFIED="1346251398434" TEXT="Can make code difficult to understand and document"/>
<node CREATED="1346251405302" ID="ID_936289026" MODIFIED="1346251416779" TEXT="Improper use can lead to security issues"/>
<node CREATED="1346251431143" FOLDED="true" ID="ID_1229992334" MODIFIED="1346741368492" TEXT="Can also be use to hold function name">
<node CREATED="1346251448608" ID="ID_527547941" MODIFIED="1346251459573" TEXT="function myFunc(){}"/>
<node CREATED="1346251460832" ID="ID_805975580" MODIFIED="1346251488934" TEXT="$name = &apos;myFunc&apos;;"/>
<node CREATED="1346251489890" ID="ID_1784071442" MODIFIED="1346251508247" TEXT="$name() //will call myFunc()"/>
</node>
</node>
<node CREATED="1346251590935" FOLDED="true" ID="ID_1677014828" MODIFIED="1348004006732" TEXT="Determining if variable exists">
<node CREATED="1346251678043" ID="ID_932123580" MODIFIED="1346251705193" TEXT="Can&apos;t be sure of variable existence at one point"/>
<node CREATED="1346251706212" FOLDED="true" ID="ID_613575544" MODIFIED="1348004000290" TEXT="Range of problems">
<node CREATED="1346251722525" ID="ID_195082164" MODIFIED="1346251734075" TEXT="Warning if variable does not exists"/>
<node CREATED="1346251749718" ID="ID_895218811" MODIFIED="1346251757787" TEXT="Significant security issues"/>
<node CREATED="1346251760175" ID="ID_1949382212" MODIFIED="1346251776445" TEXT="Functionality issues"/>
</node>
<node CREATED="1346251777888" FOLDED="true" ID="ID_1887576884" MODIFIED="1348004005843" TEXT="construct isset()">
<node CREATED="1346251794408" ID="ID_452781391" MODIFIED="1346251834943" TEXT="return true if variable exists and has value other than NULL"/>
</node>
</node>
</node>
<node CREATED="1346251860364" FOLDED="true" ID="ID_1092023406" MODIFIED="1348124636753" TEXT="Constants">
<node CREATED="1346251933776" ID="ID_1560812893" MODIFIED="1346251953076" TEXT="Define immutable values"/>
<node CREATED="1346251958769" ID="ID_1491836076" MODIFIED="1346251995223" TEXT="Can be accessed for any scope"/>
<node CREATED="1346251978098" ID="ID_878105477" MODIFIED="1346251987559" TEXT="Can only contain scalar value"/>
<node CREATED="1346252015940" ID="ID_167962654" MODIFIED="1346252026441" TEXT="Identifier is case sensitive"/>
<node CREATED="1346252028812" ID="ID_1345226774" MODIFIED="1346252059018" TEXT="Same requirements as variable except for &apos;$&apos;"/>
<node CREATED="1346252065422" ID="ID_992793703" MODIFIED="1346252078539" TEXT="Best practice to use only UPPER CASE"/>
</node>
<node CREATED="1346594419964" FOLDED="true" ID="ID_679538758" MODIFIED="1348124874985" TEXT="Operators">
<node CREATED="1346594438187" FOLDED="true" ID="ID_1938769254" MODIFIED="1348124680760" TEXT="Many types">
<node CREATED="1346594443771" FOLDED="true" ID="ID_351741783" MODIFIED="1348124680011" TEXT="Common operators">
<node CREATED="1346594523080" ID="ID_1423486777" MODIFIED="1346594529189" TEXT="Assignment operators"/>
<node CREATED="1346594529847" ID="ID_1610701803" MODIFIED="1346594536885" TEXT="Arithmetic operators"/>
<node CREATED="1346594537432" ID="ID_1089316041" MODIFIED="1346594545600" TEXT="String Operators">
<node CREATED="1346594657262" ID="ID_1790740863" MODIFIED="1346594669708" TEXT="For joining string together"/>
</node>
<node CREATED="1346594546344" ID="ID_74445668" MODIFIED="1346594553278" TEXT="Comparaison operators"/>
<node CREATED="1346594553705" ID="ID_514769553" MODIFIED="1346594561734" TEXT="Logical Operators"/>
</node>
<node CREATED="1346594578530" FOLDED="true" ID="ID_1389722459" MODIFIED="1348124678723" TEXT="Others">
<node CREATED="1346594582170" ID="ID_68476818" MODIFIED="1346594598360" TEXT="Bitwise operators"/>
<node CREATED="1346594591403" FOLDED="true" ID="ID_400286819" MODIFIED="1348124671680" TEXT="Error control operator">
<node CREATED="1346594689912" ID="ID_243153824" MODIFIED="1346594699741" TEXT="For suppressing errors"/>
</node>
<node CREATED="1346594607467" FOLDED="true" ID="ID_1273362078" MODIFIED="1346741441371" TEXT="Execution operator">
<node CREATED="1346594705968" ID="ID_1060560192" MODIFIED="1346594766967" TEXT="for executing system commands"/>
</node>
<node CREATED="1346594619820" ID="ID_1644462756" MODIFIED="1346594631857" TEXT="Incrementing/decrementing operators"/>
<node CREATED="1346594632388" FOLDED="true" ID="ID_1608856952" MODIFIED="1348124676526" TEXT="Type operators">
<node CREATED="1346594774236" ID="ID_56038466" MODIFIED="1346594783321" TEXT="For identifying objects"/>
</node>
</node>
</node>
<node CREATED="1346594791964" ID="ID_1009959354" MODIFIED="1346594825323" TEXT="Almost all operators are binary (2 operands and 1 operator)"/>
<node CREATED="1346594826374" ID="ID_1429846388" MODIFIED="1346594853003" TEXT="Binary Operator sits between 2 operands"/>
<node CREATED="1346594875489" FOLDED="true" ID="ID_826163974" MODIFIED="1348124748143" TEXT="Arithmetic Operators">
<node CREATED="1346594886649" ID="ID_842868920" MODIFIED="1346594890950" TEXT="Addition"/>
<node CREATED="1346594891449" ID="ID_1767333504" MODIFIED="1346594895190" TEXT="Substraction"/>
<node CREATED="1346594895721" ID="ID_366465056" MODIFIED="1346594900062" TEXT="Multiplication"/>
<node CREATED="1346594901074" ID="ID_914416995" MODIFIED="1346594904495" TEXT="Division"/>
<node CREATED="1346594904866" ID="ID_796467737" MODIFIED="1346594953510" STYLE="fork" TEXT="Modulus">
<font NAME="SansSerif" SIZE="12"/>
</node>
<node CREATED="1346595083995" ID="ID_1124738063" MODIFIED="1346595143919" TEXT="Certain arithmetic operators assume differents meaning when applied to array">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346595148637" FOLDED="true" ID="ID_400162099" MODIFIED="1348124746567" TEXT="Incrementing/decrementing operators">
<node CREATED="1346595161214" ID="ID_88141394" MODIFIED="1346595164947" TEXT="Unary operators"/>
<node CREATED="1346595165999" ID="ID_390780623" MODIFIED="1346595216677" TEXT="Behave differently when preprend or appends"/>
<node CREATED="1346595221049" ID="ID_976082257" MODIFIED="1347950141974" TEXT="Exemple">
<node CREATED="1346595225242" ID="ID_407296577" MODIFIED="1346595231518" TEXT="$a = 1;"/>
<node CREATED="1346595232194" ID="ID_376755789" MODIFIED="1346595266603" TEXT="echo $a++; //Ouputs 1, $a is now equal to 2"/>
<node CREATED="1346595268124" ID="ID_1477927887" MODIFIED="1346595296889" TEXT="echo ++$a; //Outputs 3, $a is now equal 3"/>
<node CREATED="1346595305870" ID="ID_1769670288" MODIFIED="1346595323467" TEXT="echo --$a; //Outputs 2, $a is now equal 2"/>
<node CREATED="1346595331791" ID="ID_782398569" MODIFIED="1346595351356" TEXT="echo $a--; //Outputs 2, $a is now equal to 1"/>
</node>
<node CREATED="1346595369344" ID="ID_497260948" MODIFIED="1346595386974" TEXT="Too much of it make the code hard to read">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1346595422659" FOLDED="true" ID="ID_1505090616" MODIFIED="1346741495333" TEXT="Can only operate on variables">
<node CREATED="1346595434315" ID="ID_1794796869" MODIFIED="1346595444441" TEXT="Will throw an error otherwise"/>
</node>
<node CREATED="1346595456796" FOLDED="true" ID="ID_205725469" MODIFIED="1347950170474" TEXT="Incrementaded/decremented variable will first be converted">
<node CREATED="1346595478942" ID="ID_1035061536" MODIFIED="1346595493974" TEXT="$a = int(&apos;Test&apos;); //$a == 0"/>
<node CREATED="1346595495086" ID="ID_101665066" MODIFIED="1346595518468" TEXT="echo ++$a;//Outputs 1"/>
</node>
</node>
</node>
<node CREATED="1346597296030" FOLDED="true" ID="ID_92194354" MODIFIED="1348124765195" TEXT="String concatenation operator">
<node CREATED="1346597308958" ID="ID_1465061817" MODIFIED="1346597339949" TEXT="&apos;.&apos; is a special character for concatenation"/>
<node CREATED="1346597340672" ID="ID_163954298" MODIFIED="1346600710858" TEXT="It is only way to concatenate 2 strings"/>
<node CREATED="1346597371066" ID="ID_1220924877" MODIFIED="1346597399127" TEXT="Using &apos;+&apos; would result in adding 2 numbers"/>
</node>
<node CREATED="1346597405236" FOLDED="true" ID="ID_22278143" MODIFIED="1348124803557" TEXT="Bitwise operators">
<node CREATED="1346597868074" ID="ID_1528060618" MODIFIED="1346597888624" TEXT="Design to work with integer"/>
<node CREATED="1346597889411" ID="ID_1987584885" MODIFIED="1346597930434" TEXT="Will convert operands to integer"/>
<node CREATED="1346597951406" FOLDED="true" ID="ID_220693239" MODIFIED="1348124802405" TEXT="Operators list">
<node CREATED="1346597961678" ID="ID_1375658496" MODIFIED="1346597980165" TEXT="~ Negates all the bits"/>
<node CREATED="1346597980591" ID="ID_1416825603" MODIFIED="1346597988997" TEXT="&amp; Bitwise AND"/>
<node CREATED="1346597989608" ID="ID_230724823" MODIFIED="1346597998389" TEXT="| Bitwise OR"/>
<node CREATED="1346597998920" ID="ID_1510114924" MODIFIED="1346598010837" TEXT="^ Bitwise XOR"/>
<node CREATED="1346598049635" FOLDED="true" ID="ID_970982709" MODIFIED="1348124800549" TEXT="Shifts">
<node CREATED="1346598014377" ID="ID_1372054099" MODIFIED="1346598024070" TEXT="&lt;&lt; Bitwise left shift"/>
<node CREATED="1346598024658" ID="ID_447970740" MODIFIED="1346598034079" TEXT="&gt;&gt; Bitwise right shift"/>
<node CREATED="1346598069367" ID="ID_359191240" MODIFIED="1346598104882" TEXT="Can be use to multiply by power of 2"/>
<node CREATED="1346598105598" ID="ID_168535104" MODIFIED="1346598114210" TEXT="But be carefull to overflow"/>
<node CREATED="1346598114718" ID="ID_50140109" MODIFIED="1346598124651" TEXT="Best use pow() function"/>
</node>
</node>
</node>
<node CREATED="1346598171777" FOLDED="true" ID="ID_877491763" MODIFIED="1348124835526" TEXT="Assignements operators">
<node CREATED="1346598280663" ID="ID_713574962" MODIFIED="1346598294244" TEXT="= simpliest assignement operator"/>
<node CREATED="1346598294873" ID="ID_453597745" MODIFIED="1346598304996" TEXT="Can be combine with all binary operator"/>
<node CREATED="1346598305648" ID="ID_1714345729" MODIFIED="1346598314453" TEXT="Can be combine with bitwise operators"/>
<node CREATED="1346598336825" FOLDED="true" ID="ID_355036587" MODIFIED="1348124830209" TEXT="Referencing variables">
<node CREATED="1346598484665" FOLDED="true" ID="ID_1603973593" MODIFIED="1348004123449" TEXT="By default assignement work by value">
<node CREATED="1346598521730" ID="ID_1472173536" MODIFIED="1346598525166" TEXT="$a = 10;"/>
<node CREATED="1346598525770" ID="ID_404899457" MODIFIED="1346598531239" TEXT="$b = $a;"/>
<node CREATED="1346598551748" ID="ID_1104294360" MODIFIED="1346598554824" TEXT="$b = 20"/>
<node CREATED="1346598531579" ID="ID_1378939511" MODIFIED="1346598549936" TEXT="echo $a; //Outputs 10"/>
</node>
<node CREATED="1346598558043" FOLDED="true" ID="ID_4211174" MODIFIED="1348004124761" TEXT="Can work by reference">
<node CREATED="1346598576500" ID="ID_531110006" MODIFIED="1346598603802" TEXT="$a = 10;"/>
<node CREATED="1346598592349" ID="ID_220344101" MODIFIED="1346598614283" TEXT="$b = &amp;$a;"/>
<node CREATED="1346598588406" ID="ID_478861210" MODIFIED="1346598620076" TEXT="$b = 20;"/>
<node CREATED="1346598620735" ID="ID_1762031665" MODIFIED="1346598631956" TEXT="echo $a; //Outputs 20"/>
</node>
<node CREATED="1346598702907" ID="ID_1020206189" MODIFIED="1346598727331" TEXT="Can be very risky technique"/>
<node CREATED="1346598742445" ID="ID_980622942" MODIFIED="1346598821477" TEXT="Often slower than &quot;by value&quot; because of &quot;defered-copy&quot;"/>
</node>
<node CREATED="1346598672250" ID="ID_856005951" MODIFIED="1346598701839" TEXT="Works &quot;by value&quot; by default for all data types except object"/>
</node>
<node CREATED="1346599095358" FOLDED="true" ID="ID_867119478" MODIFIED="1348124855577" TEXT="Comparison operators">
<node CREATED="1346599138161" ID="ID_1316659865" MODIFIED="1346599155406" TEXT="Result of comparison always boolean value"/>
<node CREATED="1346599156233" FOLDED="true" ID="ID_1168985927" MODIFIED="1348124847216" TEXT="Equivalence operators">
<node CREATED="1346599177114" ID="ID_82010251" MODIFIED="1346599183607" TEXT="== Equivalence"/>
<node CREATED="1346599184243" ID="ID_626743219" MODIFIED="1346599190607" TEXT="=== Identity"/>
<node CREATED="1346599191195" ID="ID_820530637" MODIFIED="1346599201560" TEXT="!= Not equivalent operator"/>
<node CREATED="1346599202131" ID="ID_1829030681" MODIFIED="1346599210368" TEXT="!== Not identical"/>
</node>
<node CREATED="1346599248389" FOLDED="true" ID="ID_1011981573" MODIFIED="1348124850938" TEXT="Reverse operator to avoid mistaken assignements">
<node CREATED="1346599265014" ID="ID_1508697171" MODIFIED="1346599272875" TEXT="echo $a == 10;"/>
<node CREATED="1346599274063" ID="ID_246080099" MODIFIED="1346599280339" TEXT="echo 10 == $a;"/>
</node>
<node CREATED="1346599288656" FOLDED="true" ID="ID_48598001" MODIFIED="1348124854314" TEXT="Inequality operators">
<node CREATED="1346599314609" ID="ID_121454822" MODIFIED="1346599317805" TEXT="&lt; and &lt;="/>
<node CREATED="1346599318393" ID="ID_787673811" MODIFIED="1346599322677" TEXT="&gt; and &gt;="/>
<node CREATED="1346599357179" ID="ID_1444820202" MODIFIED="1346599369728" TEXT="Process is clear for numbers"/>
<node CREATED="1346599372316" FOLDED="true" ID="ID_1819651243" MODIFIED="1347950270966" TEXT="String is a bit more complicated">
<node CREATED="1346599385541" ID="ID_1605915053" MODIFIED="1346599424475" TEXT="Compared by examining binary of each byte"/>
<node CREATED="1346599425678" ID="ID_787408806" MODIFIED="1346599438051" TEXT="Until 2 are found differents"/>
<node CREATED="1346599440775" ID="ID_897987106" MODIFIED="1346599477277" TEXT="Results obtain by comparison of numeric value of those 2 bytes"/>
<node CREATED="1346599478657" FOLDED="true" ID="ID_856530151" MODIFIED="1347950265390" TEXT="exemple">
<node CREATED="1346599483785" ID="ID_1804945269" MODIFIED="1346599495470" TEXT="$left = &apos;ABC&apos;"/>
<node CREATED="1346599495938" ID="ID_1439860050" MODIFIED="1346599504351" TEXT="$right = &apos;ABD&apos;"/>
<node CREATED="1346599504922" ID="ID_1587881616" MODIFIED="1346599520727" TEXT="echo (int) ($left &gt; $right)"/>
<node CREATED="1346599521491" ID="ID_923034811" MODIFIED="1346599567386" TEXT="Outputs 0 because D is higher than C"/>
</node>
<node CREATED="1346599606455" FOLDED="true" ID="ID_95327755" MODIFIED="1347950269662" TEXT="Exemple 2 ">
<node CREATED="1346599612319" ID="ID_386163406" MODIFIED="1346599618125" TEXT="$left = &apos;apple&apos;"/>
<node CREATED="1346599618767" ID="ID_97976842" MODIFIED="1346599630741" TEXT="$right = &apos;Apple&apos;;"/>
<node CREATED="1346599631904" ID="ID_1072662589" MODIFIED="1346599651238" TEXT="echo (int) ($left &gt; $right)"/>
<node CREATED="1346599656242" ID="ID_1404327150" MODIFIED="1346599701272" TEXT="Ouputs 1 because ASCII value of &apos;a&apos; (97) higher than &apos;A&apos; (65)"/>
</node>
<node CREATED="1346599720796" ID="ID_1953235383" MODIFIED="1346599730306" TEXT="Better use special function"/>
</node>
</node>
</node>
<node CREATED="1346599942127" FOLDED="true" ID="ID_793854712" MODIFIED="1348124867161" TEXT="Logical operators">
<node CREATED="1346599948032" ID="ID_1791884029" MODIFIED="1346599961796" TEXT="Works only with boolean"/>
<node CREATED="1346599963016" ID="ID_928116950" MODIFIED="1346599980270" TEXT="PHP will convert values to boolean"/>
<node CREATED="1346599981305" ID="ID_1437769409" MODIFIED="1346599994430" TEXT="Only &apos;!&apos; (not) is unary operator"/>
<node CREATED="1346599995642" FOLDED="true" ID="ID_459507623" MODIFIED="1348124863001" TEXT="Operator list">
<node CREATED="1346600006962" ID="ID_880794725" MODIFIED="1346600010879" TEXT="! Not"/>
<node CREATED="1346600011291" ID="ID_320742111" MODIFIED="1346600028088" TEXT="&amp;&amp; / and : AND operator"/>
<node CREATED="1346600028652" ID="ID_1294201386" MODIFIED="1346600037880" TEXT="|| / or : OR operator"/>
<node CREATED="1346600045588" ID="ID_1447064858" MODIFIED="1346600055105" TEXT="XOR : XOR operator"/>
</node>
<node CREATED="1346600068158" ID="ID_1389948548" MODIFIED="1346600078323" TEXT="Expressions evaluated left to right"/>
<node CREATED="1346600078998" ID="ID_1280078453" MODIFIED="1346600100427" TEXT="Will stop evaluation if no point to do it"/>
</node>
<node CREATED="1346699450273" FOLDED="true" ID="ID_432289120" MODIFIED="1348124871377" TEXT="Other operators">
<node CREATED="1346699455631" FOLDED="true" ID="ID_1505424123" MODIFIED="1347950304815" TEXT="Error suppression">
<node CREATED="1346699464021" ID="ID_1414183682" MODIFIED="1346699470189" TEXT="@"/>
<node CREATED="1346699471085" ID="ID_8722671" MODIFIED="1346699487507" TEXT="Causes to ignore almost all error messages"/>
<node CREATED="1346699490841" ID="ID_1167287853" MODIFIED="1346699507907" TEXT="Provided that the function uses PHP error reporting system"/>
</node>
<node CREATED="1346699516303" FOLDED="true" ID="ID_1038818658" MODIFIED="1347950310056" TEXT="Backtick operator">
<node CREATED="1346699523555" ID="ID_1974308263" MODIFIED="1346699531181" TEXT="``"/>
<node CREATED="1346699534601" ID="ID_1832101030" MODIFIED="1346741640468" TEXT="Execute shell command"/>
<node CREATED="1346699546041" ID="ID_650844643" MODIFIED="1346699564729" TEXT="$a = `ls -l`"/>
<node CREATED="1346699565787" ID="ID_626722602" MODIFIED="1346699576610" TEXT="Will store &apos;ls&apos; result to $a"/>
</node>
</node>
<node CREATED="1346700069226" FOLDED="true" ID="ID_912411104" MODIFIED="1348004202365" TEXT="Precedence and Associativity">
<node CREATED="1346700106836" FOLDED="true" ID="ID_1589664123" MODIFIED="1348004181470" TEXT="Precedence">
<node CREATED="1346700111787" ID="ID_277737472" MODIFIED="1346700124116" TEXT="Rules to order operation"/>
<node CREATED="1346700128356" ID="ID_1250675802" MODIFIED="1346700134242" TEXT="Same as mathematics"/>
</node>
<node CREATED="1346700151102" FOLDED="true" ID="ID_1387069675" MODIFIED="1348004201622" TEXT="Associativity">
<node CREATED="1346700277201" ID="ID_1824182415" MODIFIED="1346700299569" TEXT="Way to execute an operation that has the same precedence"/>
<node CREATED="1346700302028" FOLDED="true" ID="ID_480184351" MODIFIED="1348004186857" TEXT="Left associativity">
<node CREATED="1346700319996" ID="ID_427766617" MODIFIED="1346700322579" TEXT="["/>
<node CREATED="1346700323134" ID="ID_591624296" MODIFIED="1346700331194" TEXT="* / %"/>
<node CREATED="1346700331754" ID="ID_1619797617" MODIFIED="1346700337693" TEXT="+ - ."/>
<node CREATED="1346700338425" ID="ID_1332511282" MODIFIED="1346700347606" TEXT="&lt;&lt; &gt;&gt;"/>
<node CREATED="1346700348135" ID="ID_744359465" MODIFIED="1346700351347" TEXT="&amp;"/>
<node CREATED="1346700360160" ID="ID_257166376" MODIFIED="1346700363418" TEXT="^"/>
<node CREATED="1346700366215" ID="ID_1649379421" MODIFIED="1346700367991" TEXT="|"/>
<node CREATED="1346700370973" ID="ID_285600123" MODIFIED="1346700372662" TEXT="&amp;&amp;"/>
<node CREATED="1346700374394" ID="ID_203300508" MODIFIED="1346700377067" TEXT="||"/>
<node CREATED="1346700378838" ID="ID_893298255" MODIFIED="1346700382089" TEXT="? :"/>
<node CREATED="1346700385636" ID="ID_835298076" MODIFIED="1346700388301" TEXT="and"/>
<node CREATED="1346700388690" ID="ID_510599122" MODIFIED="1346700393464" TEXT="xor"/>
<node CREATED="1346700394103" ID="ID_199097435" MODIFIED="1346700395971" TEXT="or"/>
<node CREATED="1346700396446" ID="ID_1612088069" MODIFIED="1346700397791" TEXT=","/>
</node>
<node CREATED="1346700402006" FOLDED="true" ID="ID_472375952" MODIFIED="1348004193816" TEXT="right associativity">
<node CREATED="1346700413672" ID="ID_1443136299" MODIFIED="1346700417759" TEXT="!"/>
<node CREATED="1346700418132" ID="ID_1136384505" MODIFIED="1346700795362" TEXT="= += -= *= /= .= %="/>
<node CREATED="1346700796665" ID="ID_148979616" MODIFIED="1346700798283" TEXT="&amp;= |= ^= &lt;&lt;= &gt;&gt;="/>
</node>
<node CREATED="1346700802890" FOLDED="true" ID="ID_75834514" MODIFIED="1348004199150" TEXT="Not associative">
<node CREATED="1346700811228" ID="ID_830418671" MODIFIED="1346700819107" TEXT="++ -"/>
<node CREATED="1346700820410" ID="ID_226936493" MODIFIED="1346700857168" TEXT="~ - (int) (float) (string) (array) (object) @"/>
<node CREATED="1346700860120" ID="ID_620611312" MODIFIED="1346700863610" TEXT="instanceof"/>
<node CREATED="1346700864178" ID="ID_192121796" MODIFIED="1346700884343" TEXT="== != === !=="/>
</node>
</node>
</node>
</node>
<node CREATED="1346700898116" FOLDED="true" ID="ID_1962743251" MODIFIED="1348124917723" TEXT="Control structures">
<node CREATED="1346701145807" ID="ID_1495705049" MODIFIED="1346701168411" TEXT="Allow to control flow of script"/>
<node CREATED="1346701202824" FOLDED="true" ID="ID_880571642" MODIFIED="1348004225109" TEXT="Conditional strucutres">
<node CREATED="1346701212362" FOLDED="true" ID="ID_414992679" MODIFIED="1346701448607" TEXT="if / elseif / else">
<node CREATED="1346701260424" ID="ID_1562356123" MODIFIED="1346701264144" TEXT="Can be nested"/>
<node CREATED="1346701270728" ID="ID_1952965591" MODIFIED="1346701291142" TEXT="Can use &apos;else if&apos;"/>
</node>
<node CREATED="1346701224752" FOLDED="true" ID="ID_1436055267" MODIFIED="1346701448080" TEXT="($a == 10) ? &apos;yes&apos;: &apos;no&apos;">
<node CREATED="1346701308371" ID="ID_671508619" MODIFIED="1346701312692" TEXT="ternary operator"/>
<node CREATED="1346701329106" ID="ID_1147232449" MODIFIED="1346701334203" TEXT="avoid nesting"/>
</node>
<node CREATED="1346701335671" FOLDED="true" ID="ID_1247461677" MODIFIED="1348004223667" TEXT="switch">
<node CREATED="1346701362318" ID="ID_978096377" MODIFIED="1346701368579" TEXT="use break between case"/>
<node CREATED="1346701369436" ID="ID_1373456890" MODIFIED="1346741714216" TEXT="evaluate initial condition only once"/>
<node CREATED="1346701421390" ID="ID_759508866" MODIFIED="1346701428684" TEXT="compare it against each case"/>
<node CREATED="1346701431713" ID="ID_1485651071" MODIFIED="1346701441516" TEXT="if no true then default"/>
</node>
</node>
<node CREATED="1346701454384" FOLDED="true" ID="ID_1252930680" MODIFIED="1348004353342" TEXT="Iterative constructs">
<node CREATED="1346701594422" ID="ID_825336527" MODIFIED="1346701619181" TEXT="Execute same code multiple time"/>
<node CREATED="1346701619859" FOLDED="true" ID="ID_1278508121" MODIFIED="1346741742776" TEXT="while(){}">
<node CREATED="1346701718257" ID="ID_1792457101" MODIFIED="1346701725930" TEXT="Condition check on enter"/>
<node CREATED="1346701738998" ID="ID_1460097517" MODIFIED="1346701743413" TEXT="Can be never executed"/>
</node>
<node CREATED="1346701628385" FOLDED="true" ID="ID_389211958" MODIFIED="1346741759589" TEXT="do{}while()">
<node CREATED="1346701728608" ID="ID_244805773" MODIFIED="1346701735874" TEXT="Condition check on end"/>
<node CREATED="1346701744387" ID="ID_502244274" MODIFIED="1346701753157" TEXT="Executed at least once"/>
</node>
<node CREATED="1346701635515" ID="ID_420216359" MODIFIED="1346701706190" TEXT="for($i = 0[, $j = 1]; $i &lt;$toto, $i++[, $j--]){}"/>
<node CREATED="1346701707899" ID="ID_1394213318" MODIFIED="1346701711900" TEXT="foreach()"/>
</node>
<node CREATED="1346701902618" FOLDED="true" ID="ID_1321209576" MODIFIED="1348004352468" TEXT="Breaking and Continuing">
<node CREATED="1346701910036" FOLDED="true" ID="ID_47121960" MODIFIED="1348004345697" TEXT="break">
<node CREATED="1346701915019" ID="ID_1193703177" MODIFIED="1346701928838" TEXT="Can take optionnal parameter to define nesting level"/>
<node CREATED="1346701931260" ID="ID_951313615" MODIFIED="1346701993760" TEXT="If no semicolon and next expression evaluate to integer"/>
<node CREATED="1346702000844" ID="ID_136511012" MODIFIED="1346702012159" TEXT="will be seen as parameter for break"/>
</node>
<node CREATED="1346702027518" FOLDED="true" ID="ID_1109636897" MODIFIED="1348004351648" TEXT="continue">
<node CREATED="1346702032787" ID="ID_1810016386" MODIFIED="1346702060531" TEXT="Will go next iteration"/>
<node CREATED="1346702061248" ID="ID_1253800837" MODIFIED="1346702073931" TEXT="Can take parameter to define nesting level"/>
</node>
</node>
</node>
<node CREATED="1346702104428" FOLDED="true" ID="ID_1366931881" MODIFIED="1348004416412" TEXT="Errors and Error Management">
<node CREATED="1348003125458" ID="ID_1470886357" MODIFIED="1348003139108" TEXT="Script can be advised in most cases of error"/>
<node CREATED="1348002898305" FOLDED="true" ID="ID_331571724" MODIFIED="1348004383772" TEXT="Types of errors">
<node CREATED="1348002915739" FOLDED="true" ID="ID_1117281537" MODIFIED="1348004382148" TEXT="Compile-time errors">
<node CREATED="1348002950933" ID="ID_1372316544" MODIFIED="1348002995991" TEXT="Can not be trapped from within the script (parse error)"/>
</node>
<node CREATED="1348003013311" FOLDED="true" ID="ID_241917950" MODIFIED="1348004381735" TEXT="Fatal errors">
<node CREATED="1348003018906" ID="ID_1398359029" MODIFIED="1348003033400" TEXT="Halt script execution. Can not be trapped"/>
</node>
<node CREATED="1348002925905" FOLDED="true" ID="ID_76855789" MODIFIED="1348004381393" TEXT="Recoverable errors">
<node CREATED="1348003035353" ID="ID_417494765" MODIFIED="1348003057844" TEXT="Significant faillure. Can be handled"/>
</node>
<node CREATED="1348002938122" FOLDED="true" ID="ID_59373714" MODIFIED="1348004381019" TEXT="Warnings">
<node CREATED="1348003064923" ID="ID_218191516" MODIFIED="1348003083911" TEXT="Run-time fault. Do not halt script execution"/>
</node>
<node CREATED="1348002943468" FOLDED="true" ID="ID_1781525686" MODIFIED="1348004380551" TEXT="Notices">
<node CREATED="1348003085341" ID="ID_1448674186" MODIFIED="1348003108748" TEXT="Not significant error. Do not halt script execution"/>
</node>
</node>
<node CREATED="1348003242257" FOLDED="true" ID="ID_1479120075" MODIFIED="1348004403231" TEXT="Error reporting">
<node CREATED="1348003248260" ID="ID_1846439575" MODIFIED="1348003257533" TEXT="By default PHP reports all error"/>
<node CREATED="1348003258145" ID="ID_1061207951" MODIFIED="1348003263711" TEXT="Can be security issue"/>
<node CREATED="1348003275518" FOLDED="true" ID="ID_1870881044" MODIFIED="1348004395899" TEXT="Can be configured">
<node CREATED="1348003281470" ID="ID_1844695248" MODIFIED="1348003295085" TEXT="error_reporting">
<node CREATED="1348003325418" ID="ID_1818352330" MODIFIED="1348003338255" TEXT="E_ALL &amp; ~E_NOTICE"/>
</node>
<node CREATED="1348003295458" ID="ID_9540378" MODIFIED="1348003302249" TEXT="display_errors">
<node CREATED="1348003343099" ID="ID_286490618" MODIFIED="1348003345687" TEXT="on/off"/>
</node>
<node CREATED="1348003302794" ID="ID_389930911" MODIFIED="1348003307671" TEXT="log_errors"/>
</node>
<node CREATED="1348003359052" ID="ID_795403513" MODIFIED="1348003369986" TEXT="Can be change from script with error_reporting()"/>
</node>
<node CREATED="1348003496380" FOLDED="true" ID="ID_1843414275" MODIFIED="1348004415562" TEXT="handling errors">
<node CREATED="1348003502796" ID="ID_705094725" MODIFIED="1348003520258" TEXT="set_error_handler()"/>
<node CREATED="1348003541397" ID="ID_1565138403" MODIFIED="1348003551187" TEXT="Can stack several error handler"/>
<node CREATED="1348003552029" ID="ID_882752043" MODIFIED="1348003587302" TEXT="PHP error handling will be by pass by new one"/>
<node CREATED="1348003598566" ID="ID_1326649608" MODIFIED="1348003621774" TEXT="PHP 5 set_error_handler() can determine wich error level it should handle"/>
</node>
</node>
</node>
<node CREATED="1348004429445" ID="ID_1194159623" MODIFIED="1348004432892" POSITION="right" TEXT="Functions">
<node CREATED="1348033534669" FOLDED="true" ID="ID_1492651226" MODIFIED="1348117328285" TEXT="Basic syntax">
<node CREATED="1348033540700" ID="ID_198364819" MODIFIED="1348033554466" TEXT="function name(){}"/>
<node CREATED="1348033562621" ID="ID_1642042407" MODIFIED="1348033582131" TEXT="function name are NOT case-sensitive"/>
<node CREATED="1348033846963" ID="ID_201218990" MODIFIED="1348033858744" TEXT="function identifier same as variables"/>
</node>
<node CREATED="1348034035684" FOLDED="true" ID="ID_264228216" MODIFIED="1348117330330" TEXT="Returning values">
<node CREATED="1348034046652" ID="ID_1130832765" MODIFIED="1348034053921" TEXT="All PHP function return values"/>
<node CREATED="1348034081414" ID="ID_1192360110" MODIFIED="1348034086963" TEXT="No real void functions"/>
<node CREATED="1348034059309" ID="ID_420061035" MODIFIED="1348034070762" TEXT="Specify return value withe return keyword"/>
<node CREATED="1348034092318" ID="ID_661989488" MODIFIED="1348034109532" TEXT="&quot;return&quot; also interrupt code"/>
<node CREATED="1348034124600" ID="ID_20255839" MODIFIED="1348034134141" TEXT="If no return PHP returns NULL"/>
<node CREATED="1348034155209" ID="ID_1832235439" MODIFIED="1348034169702" TEXT="Return copy by default except for objects"/>
<node CREATED="1348034170521" FOLDED="true" ID="ID_1413528603" MODIFIED="1348034758039" TEXT="Can return reference">
<node CREATED="1348034188043" ID="ID_1143385563" MODIFIED="1348034195056" TEXT="MUST return a variable">
<node CREATED="1348034270415" ID="ID_837461183" MODIFIED="1348034281308" TEXT="function &amp;getHello(){"/>
<node CREATED="1348034281760" ID="ID_103822313" MODIFIED="1348034293677" TEXT="return &quot;Hello world&quot;;"/>
<node CREATED="1348034295696" ID="ID_1507841689" MODIFIED="1348034305749" TEXT="} //will emit a notice"/>
</node>
<node CREATED="1348034195635" ID="ID_515899800" MODIFIED="1348034269491" TEXT="Can not return an expression">
<node CREATED="1348034323625" ID="ID_978076386" MODIFIED="1348034330214" TEXT="function &amp;test(){"/>
<node CREATED="1348034330890" ID="ID_573923524" MODIFIED="1348034339062" TEXT="echo &apos;This is a test&apos;;"/>
<node CREATED="1348034341162" ID="ID_587743104" MODIFIED="1348034354479" TEXT="}//Will emit a warning"/>
</node>
<node CREATED="1348034360339" ID="ID_1620788089" MODIFIED="1348034376120" TEXT="Can not use empty return to force NULL"/>
</node>
</node>
<node CREATED="1348034515507" FOLDED="true" ID="ID_481678558" MODIFIED="1348117330923" TEXT="Variable scope">
<node CREATED="1348034522011" FOLDED="true" ID="ID_162064923" MODIFIED="1348035041180" TEXT="3 scopes">
<node CREATED="1348034527179" ID="ID_1097806941" MODIFIED="1348034534467" TEXT="Global"/>
<node CREATED="1348034535436" ID="ID_163230168" MODIFIED="1348034542977" TEXT="function"/>
<node CREATED="1348034543636" ID="ID_1304073641" MODIFIED="1348034545568" TEXT="class"/>
</node>
<node CREATED="1348034549452" ID="ID_415653867" MODIFIED="1348034587099" TEXT="Declare or assign variable outside function are in global scope"/>
<node CREATED="1348034597534" FOLDED="true" ID="ID_1728201012" MODIFIED="1348035038667" TEXT="New scope created when entering function">
<node CREATED="1348034656273" ID="ID_721892931" MODIFIED="1348034657510" TEXT="Clean state"/>
<node CREATED="1348034658025" ID="ID_1469305691" MODIFIED="1348034662551" TEXT="No variable"/>
<node CREATED="1348034662890" ID="ID_422016401" MODIFIED="1348034669110" TEXT="isolated from global scope"/>
<node CREATED="1348034687826" ID="ID_719444212" MODIFIED="1348034703360" TEXT="Declared variable no longer available at function end"/>
</node>
<node CREATED="1348034781015" ID="ID_696792175" MODIFIED="1348034791780" TEXT="2 ways to access global scope">
<node CREATED="1348034799896" FOLDED="true" ID="ID_414636072" MODIFIED="1348035036995" TEXT="global keyword">
<node CREATED="1348034864259" ID="ID_709586622" MODIFIED="1348034874446" TEXT="Like importing variable inside scope"/>
<node CREATED="1348034888309" ID="ID_701398377" MODIFIED="1348034899930" TEXT="Can take &apos;,&apos; separated variable list"/>
<node CREATED="1348034806616" ID="ID_142047505" MODIFIED="1348034812077" TEXT="$a = &apos;toto&apos;;"/>
<node CREATED="1348034902373" ID="ID_875067619" MODIFIED="1348034908698" TEXT="$b = &apos;tata&apos;;"/>
<node CREATED="1348034813169" ID="ID_1305029273" MODIFIED="1348034819638" TEXT="function test(){"/>
<node CREATED="1348034820145" ID="ID_1364442182" MODIFIED="1348034914267" TEXT="global $a, $b;"/>
<node CREATED="1348034827257" ID="ID_323573093" MODIFIED="1348034830687" TEXT="echo $a;"/>
<node CREATED="1348034832361" ID="ID_1383836987" MODIFIED="1348034841438" TEXT="} //will output &quot;toto&quot;"/>
</node>
<node CREATED="1348034931519" FOLDED="true" ID="ID_1522233365" MODIFIED="1348035035291" TEXT="$GLOBALS superglobal">
<node CREATED="1348034943951" ID="ID_1937757238" MODIFIED="1348034954108" TEXT="Contains all variable in global scope"/>
<node CREATED="1348034963336" ID="ID_1324738466" MODIFIED="1348034969133" TEXT="$a = &quot;toto&quot;;"/>
<node CREATED="1348034969920" ID="ID_1515862341" MODIFIED="1348034974405" TEXT="$b = &quot;tata&quot;;"/>
<node CREATED="1348034975425" ID="ID_771866166" MODIFIED="1348034984237" TEXT="function test(){"/>
<node CREATED="1348034984745" ID="ID_1451642222" MODIFIED="1348035024512" TEXT="echo $GLOBALS[&apos;a&apos;] . &apos; &apos; . $GLOBALS[&apos;b&apos;];"/>
<node CREATED="1348035000985" ID="ID_1553790470" MODIFIED="1348035029088" TEXT="}"/>
</node>
</node>
</node>
<node CREATED="1348035130592" FOLDED="true" ID="ID_1982456093" MODIFIED="1348035677851" TEXT="Passing arguments">
<node CREATED="1348035345730" ID="ID_1099589814" MODIFIED="1348035359439" TEXT="Can pass arbitrary number of arguments"/>
<node CREATED="1348035367363" ID="ID_164660107" MODIFIED="1348035378040" TEXT="Regardless of many you put in declaration"/>
<node CREATED="1348035384100" ID="ID_1065570796" MODIFIED="1348035396209" TEXT="PHP complain only if fewer arguments given"/>
<node CREATED="1348035406749" FOLDED="true" ID="ID_636091769" MODIFIED="1348035473880" TEXT="Can argument optional by adding default value to declaration">
<node CREATED="1348035427062" ID="ID_1486425579" MODIFIED="1348035438443" TEXT="Must be right-most in function declaration"/>
<node CREATED="1348035453231" ID="ID_962827832" MODIFIED="1348035459980" TEXT="Can take only values"/>
<node CREATED="1348035460359" ID="ID_605297799" MODIFIED="1348035464356" TEXT="No expressions"/>
</node>
</node>
<node CREATED="1348035679650" FOLDED="true" ID="ID_1154872746" MODIFIED="1348036179466" TEXT="Variable length arguments list">
<node CREATED="1348035689843" ID="ID_1699744131" MODIFIED="1348035737617" TEXT="Ability to create function that accepts variable number of arguments"/>
<node CREATED="1348035758054" ID="ID_821610982" MODIFIED="1348035770203" TEXT="printf() family function works this way"/>
<node CREATED="1348035770758" ID="ID_599223551" MODIFIED="1348035790132" TEXT="3 built-in function to handle this">
<node CREATED="1348035791016" ID="ID_973609044" MODIFIED="1348035798532" TEXT="func_num_args()">
<node CREATED="1348035828753" ID="ID_1199527470" MODIFIED="1348035839110" TEXT="Returns nb args"/>
</node>
<node CREATED="1348035798800" ID="ID_1607086378" MODIFIED="1348035806797" TEXT="func_get_arg()">
<node CREATED="1348035842258" ID="ID_583149477" MODIFIED="1348035868775" TEXT="Returns specific arg by position"/>
</node>
<node CREATED="1348035807103" ID="ID_1781241907" MODIFIED="1348035821014" TEXT="func_get_args()">
<node CREATED="1348035855570" ID="ID_252408274" MODIFIED="1348035864810" TEXT="Returns array for variable"/>
</node>
</node>
<node CREATED="1348035877412" ID="ID_1953834089" MODIFIED="1348035963845" TEXT="Can be use even if specify arguments in function declaration">
<node CREATED="1348035912829" ID="ID_1555910132" MODIFIED="1348035938379" TEXT="func_num_args() will still return TOTAL args nb"/>
<node CREATED="1348035940311" ID="ID_1675441826" MODIFIED="1348035950220" TEXT="built-in function don&apos;t change"/>
<node CREATED="1348035989400" ID="ID_437368738" MODIFIED="1348036005414" TEXT="declared args opposed at anonymous"/>
</node>
<node CREATED="1348036047371" ID="ID_305932925" MODIFIED="1348036055590" TEXT="Very powerful"/>
<node CREATED="1348036017170" ID="ID_561198621" MODIFIED="1348036025312" TEXT="Contains many pitfal">
<node CREATED="1348036026051" ID="ID_499150903" MODIFIED="1348036063689" TEXT="Can make code confusing"/>
<node CREATED="1348036064020" ID="ID_779680760" MODIFIED="1348036084059" TEXT="Nearly impossible to provide test cases"/>
</node>
</node>
<node CREATED="1348036180282" FOLDED="true" ID="ID_977975162" MODIFIED="1348117334647" TEXT="Passing arguments by reference">
<node CREATED="1348036190242" ID="ID_797854659" MODIFIED="1348036208720" TEXT="Using the by-reference operator &apos;&amp;&apos;"/>
<node CREATED="1348036215235" ID="ID_22374701" MODIFIED="1348036222169" TEXT="Allows to affect external variables"/>
<node CREATED="1348036238820" ID="ID_1724512402" MODIFIED="1348036251892" TEXT="Only variables can be passed by reference">
<icon BUILTIN="messagebox_warning"/>
</node>
<node CREATED="1348036263374" FOLDED="true" ID="ID_936568089" MODIFIED="1348117333602" TEXT="Unlike PHP4, PHP5 allows default values for by-reference variables">
<node CREATED="1348036303384" ID="ID_242027474" MODIFIED="1348036323741" TEXT="function test($cmd, &amp;$output = null){"/>
<node CREATED="1348036324200" ID="ID_1433275692" MODIFIED="1348036347198" TEXT="$output = &apos;toto&apos; . $cmd;"/>
<node CREATED="1348036353506" ID="ID_205757306" MODIFIED="1348036355359" TEXT="}"/>
<node CREATED="1348036358210" ID="ID_722105118" MODIFIED="1348036370208" TEXT="Will create $output in function scope"/>
<node CREATED="1348036370795" ID="ID_1488196071" MODIFIED="1348036379393" TEXT="destroys it at function end"/>
</node>
</node>
</node>
<node CREATED="1348117338665" ID="ID_1830872337" MODIFIED="1348117342293" POSITION="right" TEXT="Arrays">
<node CREATED="1348117344244" ID="ID_1591704998" MODIFIED="1348117348536" TEXT="Array Basics">
<node CREATED="1348118013437" FOLDED="true" ID="ID_469060880" MODIFIED="1348118296176" TEXT="General">
<node CREATED="1348117642499" ID="ID_1150994090" MODIFIED="1348117652766" TEXT="Items in array = elements"/>
<node CREATED="1348117653335" ID="ID_484041883" MODIFIED="1348117669837" TEXT="each elements has a value and a key"/>
<node CREATED="1348117683690" ID="ID_1466175846" MODIFIED="1348117688213" TEXT="Keys">
<node CREATED="1348117688214" ID="ID_1078871809" MODIFIED="1348117699505" TEXT="Can be integer"/>
<node CREATED="1348117700316" ID="ID_1744305857" MODIFIED="1348117706725" TEXT="can be string"/>
<node CREATED="1348117707457" ID="ID_1209059451" MODIFIED="1348117713765" TEXT="have arbitrary length"/>
<node CREATED="1348117772227" ID="ID_66512124" MODIFIED="1348117792235" TEXT="If none specify during initialisation">
<node CREATED="1348117793317" ID="ID_483286691" MODIFIED="1348117801352" TEXT="Assign integer key"/>
<node CREATED="1348117801804" ID="ID_114134923" MODIFIED="1348117823160" TEXT="Starts at 0"/>
</node>
</node>
<node CREATED="1348117724089" ID="ID_1518197374" MODIFIED="1348117731555" TEXT="Building array">
<node CREATED="1348117732029" ID="ID_1032677753" MODIFIED="1348117736788" TEXT="with array()">
<node CREATED="1348117855268" ID="ID_726045477" MODIFIED="1348117867690" TEXT="$a = array(10, 12, 15,)"/>
<node CREATED="1348117868310" ID="ID_246904602" MODIFIED="1348117881626" TEXT="Dangling comma prefectly normal"/>
</node>
<node CREATED="1348117893482" ID="ID_17592975" MODIFIED="1348117899313" TEXT="array operator : []">
<node CREATED="1348117900210" ID="ID_1207800975" MODIFIED="1348117927391" TEXT="$a[] = 10;"/>
<node CREATED="1348117931159" ID="ID_1563626110" MODIFIED="1348117952496" TEXT="No key specify gives highest available int"/>
<node CREATED="1348117977756" ID="ID_1231199423" MODIFIED="1348117988770" TEXT="If $a was not an array PHP converts it"/>
</node>
</node>
</node>
<node CREATED="1348118030956" FOLDED="true" ID="ID_1193632173" MODIFIED="1348119427079" TEXT="Printing array">
<node CREATED="1348118130557" ID="ID_1592775030" MODIFIED="1348118158609" TEXT="echo can not output composite  data types"/>
<node CREATED="1348118159236" ID="ID_1917475189" MODIFIED="1348118174260" TEXT="var_dump()">
<node CREATED="1348118175391" ID="ID_1338533207" MODIFIED="1348118192341" TEXT="Recursively print content"/>
<node CREATED="1348118192995" ID="ID_1812755207" MODIFIED="1348118204633" TEXT="outputs data type of each value"/>
<node CREATED="1348118208862" ID="ID_1741310844" MODIFIED="1348118217712" TEXT="can output more than one variable at a time"/>
<node CREATED="1348118220956" ID="ID_818757220" MODIFIED="1348118231013" TEXT="output in script standard output"/>
</node>
<node CREATED="1348118236278" ID="ID_847811191" MODIFIED="1348118238553" TEXT="print_r">
<node CREATED="1348118175391" ID="ID_1659591087" MODIFIED="1348118192341" TEXT="Recursively print content"/>
<node CREATED="1348118252401" ID="ID_586087899" MODIFIED="1348118269762" TEXT="can return its output as a string"/>
</node>
</node>
<node CREATED="1348118303187" FOLDED="true" ID="ID_912272497" MODIFIED="1348119306058" TEXT="Enumerative vs. Associative">
<node CREATED="1348118489212" ID="ID_1181951953" MODIFIED="1348118510457" TEXT="enumerative only indexed with integer"/>
<node CREATED="1348118511236" ID="ID_752951304" MODIFIED="1348118522151" TEXT="associative">
<node CREATED="1348118523011" ID="ID_153982457" MODIFIED="1348118529854" TEXT="also call dictionaries"/>
<node CREATED="1348118532053" ID="ID_716204065" MODIFIED="1348118562584" TEXT="allow association of arbitrary key to each elements"/>
</node>
<node CREATED="1348118571548" ID="ID_1873205610" MODIFIED="1348118597849" TEXT="can create enumerative and add associative elements"/>
<node CREATED="1348118598491" ID="ID_933892358" MODIFIED="1348118630262" TEXT="and maintaining enumerative elements"/>
<node CREATED="1348118641336" ID="ID_907511884" MODIFIED="1348118655341" TEXT="can be use to simulate queues and stack"/>
<node CREATED="1348118784590" ID="ID_125162759" MODIFIED="1348118807575" TEXT="keys don&apos;t determine elements order in array"/>
<node CREATED="1348118750165" FOLDED="true" ID="ID_1419835979" MODIFIED="1348119304438" TEXT="keys">
<node CREATED="1348118680256" ID="ID_1890839109" MODIFIED="1348118690106" TEXT="integer keys can be positive or negative"/>
<node CREATED="1348118690972" ID="ID_549794253" MODIFIED="1348118716141" TEXT="don&apos;t need to be sequential"/>
<node CREATED="1348118720420" ID="ID_1559209512" MODIFIED="1348118746812" TEXT="if gap between keys dont need to create missing keys"/>
<node CREATED="1348118945394" FOLDED="true" ID="ID_1074919748" MODIFIED="1348119077842" TEXT="New keys">
<node CREATED="1348118887024" ID="ID_1721749293" MODIFIED="1348118906275" TEXT="$a = array ( 2 =&gt; 5);"/>
<node CREATED="1348118908046" ID="ID_298383033" MODIFIED="1348118927528" TEXT="$a[] = &apos;a&apos;; // This will have a key of 3"/>
<node CREATED="1348118963289" ID="ID_410347802" MODIFIED="1348118982886" TEXT="Works for mix of numerics/string keys"/>
<node CREATED="1348118984194" ID="ID_1559374011" MODIFIED="1348119016785" TEXT="$a = array(&apos;4&apos; =&gt; 5, &apos;a&apos; =&gt; &apos;b&apos;);"/>
<node CREATED="1348119018667" ID="ID_1588391180" MODIFIED="1348119034722" TEXT="$a[] = 44; // This will have a key of 5"/>
</node>
<node CREATED="1348119122123" FOLDED="true" ID="ID_1222472589" MODIFIED="1348119302219" TEXT="types">
<node CREATED="1348119081628" ID="ID_74879888" MODIFIED="1348119092439" TEXT="Keys are case-sensitive"/>
<node CREATED="1348119093047" ID="ID_1374682670" MODIFIED="1348119111855" TEXT="Keys are type insensitive"/>
<node CREATED="1348119135424" ID="ID_38645063" MODIFIED="1348119153338" TEXT="&apos;A&apos; is different of &apos;a&apos;"/>
<node CREATED="1348119154069" ID="ID_1564353321" MODIFIED="1348119164982" TEXT="&apos;1&apos; is same as 1"/>
<node CREATED="1348119220963" ID="ID_799711407" MODIFIED="1348119235727" TEXT="Conversion only works with traditional deciaml representation"/>
<node CREATED="1348119237388" ID="ID_1340411537" MODIFIED="1348119245098" TEXT="&apos;01&apos; not the same as 1"/>
</node>
</node>
</node>
<node CREATED="1348119307490" FOLDED="true" ID="ID_1679962873" MODIFIED="1348119429274" TEXT="Multi-dimensional Arrays">
<node CREATED="1348119317250" ID="ID_433695880" MODIFIED="1348119339725" TEXT="Assign array to value of an array element"/>
<node CREATED="1348119352801" ID="ID_1216139875" MODIFIED="1348119359197" TEXT="Allow infinite nesting level"/>
<node CREATED="1348119370543" ID="ID_643850890" MODIFIED="1348119406826" TEXT="to access multi-dim just &quot;stack&quot; array operator : $array[0][1]"/>
</node>
<node CREATED="1348119566684" ID="ID_1888832140" MODIFIED="1348119573830" TEXT="Unravelling Arrays">
<node CREATED="1348119574834" ID="ID_1659928631" MODIFIED="1348119603151" TEXT="use construct list()"/>
<node CREATED="1348119603981" ID="ID_638799413" MODIFIED="1348119611184" TEXT="pass it to individual variables"/>
</node>
</node>
<node CREATED="1348120181745" ID="ID_471893929" MODIFIED="1348120185224" TEXT="Array operations">
<node CREATED="1348120187234" ID="ID_72183767" MODIFIED="1348120395012" TEXT="+ operator">
<node CREATED="1348120396089" FOLDED="true" ID="ID_1149840116" MODIFIED="1348120823605" TEXT="union of 2 operands">
<node CREATED="1348120449154" ID="ID_853280269" MODIFIED="1348120464163" TEXT="$a = array(1, 2, 3);"/>
<node CREATED="1348120464614" ID="ID_1453507536" MODIFIED="1348120502098" TEXT="$b =array(&apos;a&apos; =&gt; 1, &apos;b&apos; =&gt;2, &apos;c&apos; =&gt; 3),"/>
<node CREATED="1348120503174" ID="ID_1494810239" MODIFIED="1348120511702" TEXT="var_dump($a + $b)">
<node CREATED="1348120514541" ID="ID_1254153434" MODIFIED="1348120527559" TEXT="[0] =&gt; 1"/>
<node CREATED="1348120528508" ID="ID_304598069" MODIFIED="1348120536884" TEXT="[1] =&gt; 2"/>
<node CREATED="1348120537483" ID="ID_1245277023" MODIFIED="1348120543867" TEXT="[2] =&gt; 3"/>
<node CREATED="1348120544537" ID="ID_1376197889" MODIFIED="1348120557254" TEXT="[a] =&gt; 1"/>
<node CREATED="1348120557588" ID="ID_149733041" MODIFIED="1348120563973" TEXT="[b] =&gt; 2"/>
<node CREATED="1348120564314" ID="ID_1013256786" MODIFIED="1348120570779" TEXT="[c] =&gt; 3"/>
</node>
<node CREATED="1348120587684" ID="ID_1708429593" MODIFIED="1348120620635" TEXT="Results of fact that 2 arrays have different type of keys"/>
<node CREATED="1348120637701" ID="ID_162453775" MODIFIED="1348120653770" TEXT="If had common keys "/>
<node CREATED="1348120449154" ID="ID_1231658116" MODIFIED="1348120464163" TEXT="$a = array(1, 2, 3);"/>
<node CREATED="1348120464614" ID="ID_1976161594" MODIFIED="1348120716218" TEXT="$b =array(&apos;a&apos; =&gt; 1, 2, 3),"/>
<node CREATED="1348120503174" ID="ID_517218356" MODIFIED="1348120511702" TEXT="var_dump($a + $b)">
<node CREATED="1348120514541" ID="ID_1039879174" MODIFIED="1348120527559" TEXT="[0] =&gt; 1"/>
<node CREATED="1348120528508" ID="ID_1454168636" MODIFIED="1348120536884" TEXT="[1] =&gt; 2"/>
<node CREATED="1348120537483" ID="ID_664564335" MODIFIED="1348120543867" TEXT="[2] =&gt; 3"/>
<node CREATED="1348120544537" ID="ID_1077483206" MODIFIED="1348120557254" TEXT="[a] =&gt; 1"/>
</node>
</node>
</node>
<node CREATED="1348120825482" ID="ID_277492245" MODIFIED="1348120830309" TEXT="Comparing arrays">
<node CREATED="1348120831848" FOLDED="true" ID="ID_284986455" MODIFIED="1348121202191" TEXT="using equality and equivalence">
<node CREATED="1348120893258" ID="ID_672205983" MODIFIED="1348120906715" TEXT="$a = array(1, 2, 3);"/>
<node CREATED="1348120908002" ID="ID_1771296185" MODIFIED="1348120938371" TEXT="$b = array(1=&gt;2, 2 =&gt; 3, 0 =&gt; 1);"/>
<node CREATED="1348120939244" ID="ID_1971540244" MODIFIED="1348120981615" TEXT="$c = array(&apos;a&apos; =&gt; 1, &apos;b&apos; =&gt; 2, &apos;c&apos; =&gt; 3);"/>
<node CREATED="1348120987363" ID="ID_727959052" MODIFIED="1348121002088" TEXT="var_dump($a == $b) //True"/>
<node CREATED="1348121005554" ID="ID_1280342094" MODIFIED="1348121017115" TEXT="var_dump($a === $b) // False"/>
<node CREATED="1348121026266" ID="ID_1011946189" MODIFIED="1348121037319" TEXT="var_dump($a == $c) // False"/>
<node CREATED="1348121038739" ID="ID_1581108639" MODIFIED="1348121049141" TEXT="var_dump($a === $c) //False"/>
<node CREATED="1348121063344" FOLDED="true" ID="ID_820947345" MODIFIED="1348121199473" TEXT="== return true if">
<node CREATED="1348121075312" ID="ID_758480458" MODIFIED="1348121085340" TEXT="same number of elements"/>
<node CREATED="1348121085713" ID="ID_1849762144" MODIFIED="1348121100876" TEXT="same values and keys"/>
<node CREATED="1348121101446" ID="ID_133797713" MODIFIED="1348121106292" TEXT="regardless order"/>
</node>
<node CREATED="1348121122865" FOLDED="true" ID="ID_225541992" MODIFIED="1348121200081" TEXT="=== return true if">
<node CREATED="1348121075312" ID="ID_1526872859" MODIFIED="1348121085340" TEXT="same number of elements"/>
<node CREATED="1348121085713" ID="ID_1527892737" MODIFIED="1348121100876" TEXT="same values and keys"/>
<node CREATED="1348121101446" ID="ID_1032574035" MODIFIED="1348121166091" TEXT="same order"/>
</node>
</node>
<node CREATED="1348121203159" FOLDED="true" ID="ID_1107110125" MODIFIED="1348121369566" TEXT="unsing inequality and non-identity">
<node CREATED="1348121219314" ID="ID_351638064" MODIFIED="1348121228469" TEXT="$a = array(1, 2, 3);"/>
<node CREATED="1348121229562" ID="ID_236950557" MODIFIED="1348121262189" TEXT="$b = array(1 =&gt; 2, 2 =&gt; 3, 0 =&gt; 1);"/>
<node CREATED="1348121271026" ID="ID_32076022" MODIFIED="1348121283471" TEXT="var_dump($a != $b) //False"/>
<node CREATED="1348121284078" ID="ID_164529206" MODIFIED="1348121295389" TEXT="var_dump($a !== $b) // True"/>
<node CREATED="1348121315920" ID="ID_511359410" MODIFIED="1348121327108" TEXT="!=">
<node CREATED="1348121328970" ID="ID_1638681990" MODIFIED="1348121344691" TEXT="ensure that same element with same keys"/>
<node CREATED="1348121348925" ID="ID_607383670" MODIFIED="1348121352255" TEXT="regardless order"/>
</node>
<node CREATED="1348121353960" ID="ID_1092629404" MODIFIED="1348121356501" TEXT="!==">
<node CREATED="1348121328970" ID="ID_1666817361" MODIFIED="1348121344691" TEXT="ensure that same element with same keys"/>
<node CREATED="1348121348925" ID="ID_246793779" MODIFIED="1348121364539" TEXT="same order"/>
</node>
</node>
</node>
<node CREATED="1348121787408" FOLDED="true" ID="ID_513189517" MODIFIED="1348122747565" TEXT="Counting, Searching and Deleting elements">
<node CREATED="1348121805325" FOLDED="true" ID="ID_481390572" MODIFIED="1348122286348" TEXT="size = count()">
<node CREATED="1348121818591" ID="ID_911317432" MODIFIED="1348121834356" TEXT="$a = array(1,2,4);"/>
<node CREATED="1348121834956" ID="ID_39323333" MODIFIED="1348121842009" TEXT="$b = array();"/>
<node CREATED="1348121842284" ID="ID_1104153910" MODIFIED="1348121850126" TEXT="$c = 10;"/>
<node CREATED="1348121852233" ID="ID_1629739007" MODIFIED="1348121860556" TEXT="echo count($a) //3"/>
<node CREATED="1348121860999" ID="ID_445070626" MODIFIED="1348121875518" TEXT="echo count($b) //0"/>
<node CREATED="1348121876477" ID="ID_1596160948" MODIFIED="1348121884779" TEXT="echo count(10) // 1"/>
<node CREATED="1348121998283" ID="ID_1387485210" MODIFIED="1348122015664" TEXT="count() of scalar =&gt; always 1"/>
<node CREATED="1348121966947" ID="ID_616062968" MODIFIED="1348121985859" TEXT="Can&apos;t be use to determine variable is array"/>
<node CREATED="1348121987286" ID="ID_1432108806" MODIFIED="1348121992916" TEXT="use is_array() instead"/>
</node>
<node CREATED="1348122033764" FOLDED="true" ID="ID_571641553" MODIFIED="1348122746357" TEXT="determining key exists">
<node CREATED="1348122044818" ID="ID_1570355738" MODIFIED="1348122069257" TEXT="$a = array(&apos;a&apos; =&gt; 1, &quot;b&quot; =&gt; 2);"/>
<node CREATED="1348122070138" ID="ID_323617006" MODIFIED="1348122108147" TEXT="echo isset($a[&apos;a&apos;]) //true"/>
<node CREATED="1348122108646" ID="ID_1946884892" MODIFIED="1348122125809" TEXT="echo isset($a[&apos;c&apos;]) //false"/>
<node CREATED="1348122145655" FOLDED="true" ID="ID_307526284" MODIFIED="1348122283919" TEXT="using isset() can be problematic">
<node CREATED="1348122160200" ID="ID_1294873411" MODIFIED="1348122179518" TEXT="$a = array(&apos;a&apos; =&gt; NULL, &apos;b&apos; =&gt; 2);"/>
<node CREATED="1348122180684" ID="ID_843713126" MODIFIED="1348122195025" TEXT="echo isset($a[&apos;a&apos;]) //false"/>
</node>
<node CREATED="1348122201871" ID="ID_1887879665" MODIFIED="1348122331759" TEXT="correct way is to use array_key_exists()">
<node CREATED="1348122160200" ID="ID_475045129" MODIFIED="1348122179518" TEXT="$a = array(&apos;a&apos; =&gt; NULL, &apos;b&apos; =&gt; 2);"/>
<node CREATED="1348122180684" ID="ID_1146950159" MODIFIED="1348122261836" TEXT="echo array_key_exists(&apos;a&apos;, $a) //true"/>
</node>
</node>
<node CREATED="1348122288502" FOLDED="true" ID="ID_1779945616" MODIFIED="1348122745686" TEXT="Looking for value">
<node CREATED="1348122305005" ID="ID_1860779396" MODIFIED="1348122312422" TEXT="use in_array()"/>
<node CREATED="1348122160200" ID="ID_1140344275" MODIFIED="1348122179518" TEXT="$a = array(&apos;a&apos; =&gt; NULL, &apos;b&apos; =&gt; 2);"/>
<node CREATED="1348122337760" ID="ID_1656879866" MODIFIED="1348122360645" TEXT="echo in_array(2, $a) // True"/>
</node>
<node CREATED="1348122367174" FOLDED="true" ID="ID_269184069" MODIFIED="1348122745222" TEXT="Deleting element">
<node CREATED="1348122160200" ID="ID_560781601" MODIFIED="1348122179518" TEXT="$a = array(&apos;a&apos; =&gt; NULL, &apos;b&apos; =&gt; 2);"/>
<node CREATED="1348122391930" ID="ID_973779474" MODIFIED="1348122403332" TEXT="unset($a[&apos;b&apos;]);"/>
<node CREATED="1348122405283" ID="ID_360771097" MODIFIED="1348122737342" TEXT="echo in_array(2, $a); //false"/>
</node>
</node>
<node CREATED="1348122748414" FOLDED="true" ID="ID_222255292" MODIFIED="1348123170508" TEXT="Flipping and Reversing">
<node CREATED="1348122819745" FOLDED="true" ID="ID_1741467508" MODIFIED="1348122928978" TEXT="array_flip()">
<node CREATED="1348122824759" ID="ID_616974747" MODIFIED="1348122855810" TEXT="inverse between values and keys"/>
<node CREATED="1348122857016" ID="ID_924331229" MODIFIED="1348122875509" TEXT="$a = array(&apos;a&apos;, &apos;b&apos;, &apos;c&apos;);"/>
<node CREATED="1348122883911" FOLDED="true" ID="ID_810233240" MODIFIED="1348122928222" TEXT="var_dump(array_flip($a));">
<node CREATED="1348122894979" ID="ID_117110280" MODIFIED="1348122909186" TEXT="[a] =&gt; 0"/>
<node CREATED="1348122909918" ID="ID_983302679" MODIFIED="1348122915950" TEXT="[b] =&gt; 1"/>
<node CREATED="1348122916337" ID="ID_588923968" MODIFIED="1348122921681" TEXT="[c] =&gt; 2"/>
</node>
</node>
<node CREATED="1348122929965" FOLDED="true" ID="ID_418900068" MODIFIED="1348123165786" TEXT="array_reverse()">
<node CREATED="1348122940103" ID="ID_1069971455" MODIFIED="1348122987634" TEXT="Inverse array elements order"/>
<node CREATED="1348122996408" ID="ID_1255921343" MODIFIED="1348123022331" TEXT="$a = array (&apos;x&apos; =&gt; &apos;a&apos;, 10 =&gt; &apos;b&apos;, &apos;c&apos;);"/>
<node CREATED="1348123023118" ID="ID_1565157199" MODIFIED="1348123035209" TEXT="var_dump(array_reverse($a));">
<node CREATED="1348123036090" ID="ID_56166377" MODIFIED="1348123054809" TEXT="[0] =&gt; c"/>
<node CREATED="1348123055791" ID="ID_1925195268" MODIFIED="1348123061128" TEXT="[1] =&gt; b"/>
<node CREATED="1348123061407" ID="ID_1377256632" MODIFIED="1348123071477" TEXT="[&apos;x&apos;] =&gt; a"/>
</node>
<node CREATED="1348123075365" ID="ID_858351474" MODIFIED="1348123092517" TEXT="Key association is lost for numeric keys"/>
</node>
</node>
</node>
<node CREATED="1348123692721" ID="ID_394074844" MODIFIED="1348123696926" TEXT="Array iteration">
<node CREATED="1348123697930" ID="ID_598865495" MODIFIED="1348123700758" TEXT="Array pointer">
<node CREATED="1348123702306" ID="ID_1661474286" MODIFIED="1348123719411" TEXT="Indicate current element of an array"/>
<node CREATED="1348123720198" ID="ID_1109398908" MODIFIED="1348123753877" TEXT="can be manipulate by set of function">
<node CREATED="1348123775543" ID="ID_408979722" MODIFIED="1348123779768" TEXT="reset()">
<node CREATED="1348123828902" ID="ID_1731237779" MODIFIED="1348123840664" TEXT="set pointer at array begining"/>
</node>
<node CREATED="1348123780066" ID="ID_1454299912" MODIFIED="1348123781905" TEXT="end()">
<node CREATED="1348123842907" ID="ID_156296634" MODIFIED="1348123849064" TEXT="set pointer at end of array"/>
</node>
<node CREATED="1348123782185" ID="ID_800164758" MODIFIED="1348123786170" TEXT="next()">
<node CREATED="1348123852133" ID="ID_1617801574" MODIFIED="1348123867487" TEXT="move pointer to next element"/>
</node>
<node CREATED="1348123786465" ID="ID_941088567" MODIFIED="1348123788844" TEXT="prev()">
<node CREATED="1348123872026" ID="ID_1767389282" MODIFIED="1348123884359" TEXT="move pointer to previous element"/>
</node>
<node CREATED="1348123789217" ID="ID_862059051" MODIFIED="1348123791621" TEXT="key()">
<node CREATED="1348123887240" ID="ID_1457999960" MODIFIED="1348123896937" TEXT="get key of current element"/>
<node CREATED="1348123924403" ID="ID_1276143693" MODIFIED="1348123938186" TEXT="returns NULL if no element"/>
<node CREATED="1348123955868" ID="ID_965820573" MODIFIED="1348123997699" TEXT="use !== to compare with NULL in case of a &apos;0&apos; key that would give key($array) != NULL =&gt; true"/>
</node>
<node CREATED="1348123812886" ID="ID_282063818" MODIFIED="1348123818235" TEXT="current()">
<node CREATED="1348123898871" ID="ID_1636714953" MODIFIED="1348123907707" TEXT="get value of current element"/>
</node>
</node>
<node CREATED="1348124014344" ID="ID_1011135812" MODIFIED="1348124030451" TEXT="When passing by reference pointer state is coied"/>
<node CREATED="1348124031004" ID="ID_1581119742" MODIFIED="1348124044015" TEXT="When passing by value pointer is reset()"/>
</node>
</node>
</node>
</node>
</map>
